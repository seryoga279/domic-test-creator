/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package DOMIC;


import java.util.ArrayList;
import javax.swing.*;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.TreeNode;
import javax.swing.tree.TreePath;
import javax.swing.tree.TreeSelectionModel; 


/**
 *
 * @author Сергей
 */
public class Start_Page extends javax.swing.JFrame {
 
   
    
    public DefaultListModel listModel = new DefaultListModel();
    public DefaultMutableTreeNode rootNode = new DefaultMutableTreeNode();
    public DefaultTreeModel treeModel = new DefaultTreeModel(rootNode);
    public MyCellRenderer renderer = new MyCellRenderer();
    public ArrayList<QuestionBlock> questionBlocks = new ArrayList<>();
    public int QuestionBlockIndex = 1;
   // public int QuestionIndex=0;
   
    
    
    
    
    
    
    
    
        
  
    public Start_Page() {
                       
        initComponents();
       
        jList1.setLayoutOrientation(JList.VERTICAL);
        jList1.setModel(listModel);
        jTree1.setEditable(true);
        jTree1.getSelectionModel().setSelectionMode(TreeSelectionModel.SINGLE_TREE_SELECTION);
        jTree1.setShowsRootHandles(true);
        // Корневой узел
        DefaultMutableTreeNode root = new DefaultMutableTreeNode("Тест");
        for (int i = 1; i < 2; i++){
            // Содержимое корневого узла 
            DefaultMutableTreeNode folder = new DefaultMutableTreeNode("Блок вопросов " + i );
            root.add(folder);
            
                // Содержимое папок корневого узла
                DefaultMutableTreeNode leaf = new DefaultMutableTreeNode("вопрос " + i );
                leaf.setAllowsChildren(false);
                folder.add(leaf);
           
        }
        treeModel = new DefaultTreeModel(root, true);
        jTree1.setModel(treeModel);
        jLabel4.setText(null);
        
        
       
      
      this.questionBlocks.add(new QuestionBlock());
      
      Question question = new Question(null);
      question.addAnswer(false, null);
      
      this.questionBlocks.get(0).questions.add(new Question(null));
        
       

        
        
        
    }
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jTextField1 = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTree1 = new javax.swing.JTree();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("<html><p align=\"center\">Новый тест</p></html>");

        jLabel2.setText("<html><p align=\"center\">Для создание нового напишите текст его содержания в текстовое поле, выберите необходимое количество правильных вариантов ответа, для перехода к созданию следующего вопроса нажмите \"Далее\", по окончанию работы нажмите \"Готово\"</p> </html>");
        jLabel2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jButton2.setText("Назад");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Далее");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Готово");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jList1.setCellRenderer(renderer);
        jScrollPane2.setViewportView(jList1);

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("Тест");
        javax.swing.tree.DefaultMutableTreeNode treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Блок вопросов №1");
        javax.swing.tree.DefaultMutableTreeNode treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Воопрос 1");
        treeNode2.add(treeNode3);
        treeNode1.add(treeNode2);
        jTree1.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        jTree1.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                jTree1ValueChanged(evt);
            }
        });
        jScrollPane3.setViewportView(jTree1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(50, 50, 50)
                .addComponent(jLabel4)
                .addGap(50, 50, 50)
                .addComponent(jLabel5)
                .addGap(50, 50, 50)
                .addComponent(jLabel6)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jButton6.setText("add folder");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("add list");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton1.setText("Добавить");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton5.setText("Удалить");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton6)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 603, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(163, 163, 163)
                                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButton1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButton5))
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))))
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, 22, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(17, 17, 17)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(56, 56, 56)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jButton2)
                                    .addComponent(jButton4)
                                    .addComponent(jButton3))
                                .addGap(25, 25, 25))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton7)
                            .addComponent(jButton6))
                        .addGap(10, 10, 10)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton5))
                .addGap(21, 21, 21)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
     
     
        Question question = new Question(jTextArea1.getText());
         for(int i=0; i<listModel.getSize(); i++){
            String text = String.valueOf(listModel.getElementAt(i));
            boolean correct = jList1.isSelectedIndex(i);
            question.addAnswer(correct,text);
        
         }
         
        
       
       this.questionBlocks.get(jTree1.getModel().getIndexOfChild( 
               jTree1.getSelectionPath().getParentPath().getParentPath().getLastPathComponent(),
               jTree1.getSelectionPath().getParentPath().getLastPathComponent()))
               .addQuestion(
                       jTree1.getModel().getIndexOfChild(
                               jTree1.getSelectionPath().getParentPath().getLastPathComponent(),
                               jTree1.getSelectionPath().getLastPathComponent())
                       ,question); 
       
       
       this.jLabel3.setText("save");
       
      
      
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
Object parent = jTree1.getSelectionPath().getParentPath().getParentPath().getLastPathComponent();
Object child = jTree1.getSelectionPath().getParentPath().getLastPathComponent();


GeneratePerl gP = new GeneratePerl(this.questionBlocks.get(0));

System.out.println(gP.getPerl());





//System.out.println(child);
//System.out.println(parent);

//System.out.println(jTree1.getModel().getIndexOfChild( parent, child));
//System.out.println(treeModel.getChildCount(parent)); // количество элементов в выбранном узле
//System.out.println(jTree1.getSelectionPath().getLastPathComponent());// последний выбранный компонент 
//System.out.println(jTree1.getSelectionPath().getParentPath().getLastPathComponent());//родитель выбранного компонента
//System.out.println(jTree1.getSelectionPath());// массив пути выбранного компонента
//System.out.println(jTree1.getLeadSelectionRow());
//System.out.println(jTree1.getSelectionPath().getParentPath().getParentPath().getLastPathComponent());//родитель выбранного компонента
//Answer answer = new Answer("test",true);
//System.out.println(answer.getAnswerText());
//Question question = new Question("Test questions");
//question.addAnswer(true, "test answer");
//System.out.println(question.getAnswerText(0));
//System.out.println(questionBlocks.get(0).getAnswerText(0, 0));





    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
       DefaultMutableTreeNode selectedNode = (DefaultMutableTreeNode)jTree1.getLastSelectedPathComponent();
        
        if (selectedNode == null) return;
        
        DefaultMutableTreeNode parent = (DefaultMutableTreeNode)selectedNode;

        if (parent == null) return;
        if ("Тест".equals(String.valueOf(jTree1.getSelectionPath().getLastPathComponent()))) return;
        
        DefaultMutableTreeNode newNode = new DefaultMutableTreeNode("Вопрос " + (treeModel.getChildCount(jTree1.getSelectionPath().getLastPathComponent())+1));
        newNode.setAllowsChildren(false);
        int selectedIndex = parent.getIndex(selectedNode);
        treeModel.insertNodeInto(newNode, parent, selectedIndex + treeModel.getChildCount(parent)+1);
        
   
        // Отображение нового узла.
        TreeNode [] nodes = treeModel.getPathToRoot(newNode);
        TreePath path = new TreePath(nodes);
        jTree1.scrollPathToVisible(path);

       // 
        
            try {
        this.questionBlocks.get(
                jTree1.getModel().getIndexOfChild(
                        jTree1.getSelectionPath().getParentPath().getLastPathComponent(),
                        jTree1.getSelectionPath().getLastPathComponent()
                )
        )
                .questions.add(new Question(null));
       }
       catch(NullPointerException e )
               {System.out.println("null point exeption");}
        
        
        
        
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        DefaultMutableTreeNode selectedNode = (DefaultMutableTreeNode)jTree1.getLastSelectedPathComponent();
       
        
        if (selectedNode == null) return;
        
        DefaultMutableTreeNode parent = (DefaultMutableTreeNode)selectedNode;
      
        
        if (parent == null) return;
        try 
        {
          if ("Тест".equals(String.valueOf(jTree1.getSelectionPath().getParentPath().getLastPathComponent())) ) return;   
        } 
        catch (NullPointerException e) {
            System.out.println(e.getMessage());
        }
       
        
        
        DefaultMutableTreeNode newNode = new DefaultMutableTreeNode("Блок вопросов " + (treeModel.getChildCount(jTree1.getSelectionPath().getLastPathComponent())+1) );
        DefaultMutableTreeNode newLeaf = new DefaultMutableTreeNode("Вопрос 1");
        newLeaf.setAllowsChildren(false);
        int selectedIndex = parent.getIndex(selectedNode);
        
        
        treeModel.insertNodeInto(newNode, parent, selectedIndex + treeModel.getChildCount(parent)+1);
        treeModel.insertNodeInto(newLeaf, newNode, selectedIndex + 1);
     
        // Отображение нового узла.
        TreeNode [] nodes = treeModel.getPathToRoot(newNode);
        TreePath path = new TreePath(nodes);
        jTree1.scrollPathToVisible(path);
        System.out.println(parent);
        System.out.println(selectedIndex);
        
        //
        try {
           
            
        this.questionBlocks.add(new QuestionBlock() );
        Question question = new Question(null);
        question.addAnswer(false, null);
      
      this.questionBlocks.get(QuestionBlockIndex).questions.add(question);
      QuestionBlockIndex++;
       }
       catch(NullPointerException e )
               {System.out.println("null point exeption");}
        
        
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        
                //jLabel4.setText(String.valueOf(jList1.isSelectedIndex(0)));
                //jLabel5.setText(String.valueOf(listModel.getElementAt(0)));
                System.out.println(listModel.getSize());
               for(int i=0; i<listModel.getSize(); i++){
                     System.out.print(String.valueOf(listModel.getElementAt(i)) + " ");
                     System.out.println(String.valueOf(jList1.isSelectedIndex(i)));
                         
                     
                }
                
               
               
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed

    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
         listModel.addElement(jTextField1.getText());
         jTextField1.setText(null);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
       listModel.remove(jList1.getSelectedIndex());
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jTree1ValueChanged(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_jTree1ValueChanged
       
        this.jTextArea1.setText("");
        this.listModel.clear();
         this.jLabel3.setText(null);
       try{
        int QuestionBlockIndex = jTree1.getModel().getIndexOfChild( 
            jTree1.getSelectionPath().getParentPath().getParentPath().getLastPathComponent(),
            jTree1.getSelectionPath().getParentPath().getLastPathComponent());
        int QuestionIndex = jTree1.getModel().getIndexOfChild( 
            jTree1.getSelectionPath().getParentPath().getLastPathComponent(),
            jTree1.getSelectionPath().getLastPathComponent());
    
        
        if (this.questionBlocks.get(QuestionBlockIndex).getQuestionName(QuestionIndex) != null){
            this.jTextArea1.setText(this.questionBlocks.get(QuestionBlockIndex).getQuestionName(QuestionIndex));
           for (int i = 0; this.questionBlocks.get(QuestionBlockIndex).questions.get(QuestionIndex).answers.size()>i; i++ ){
               
           }
           for(int i = 0; i<this.questionBlocks.get(QuestionBlockIndex).questions.get(QuestionIndex).answers.size(); i++){
               this.listModel.addElement(questionBlocks.get(QuestionBlockIndex).getAnswerText(QuestionIndex, i));
              
               if (questionBlocks.get(QuestionBlockIndex).getAnswerCorrect(QuestionIndex, i) == true){
                   
                   
                   
                           this.jList1.setSelectionInterval(i,2);
                          
               }
           }
           
        
        } }
        catch(NullPointerException e ){
            System.out.println("NULL POINT");
            
        }
        
      
        
    }//GEN-LAST:event_jTree1ValueChanged
    
    
    
    public static void main(String args[]) {
        
         
       
        
    }
    
    
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JList jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTree jTree1;
    // End of variables declaration//GEN-END:variables

   
    }

